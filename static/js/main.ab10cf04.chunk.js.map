{"version":3,"sources":["constants/constants.js","components/Banner/Banner.js","components/Navbar/Navbar.js","components/Rowpost/Rowpost.js","Urls.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","imageUrl","Banner","info","style","backgroundImage","backdrop_path","className","title","overview","Navbar","src","alt","Rowpost","urls","isSmall","useState","movies","setMovies","movieKey","setMovieKey","useEffect","axios","get","then","res","data","results","console","log","map","obj","onClick","id","videoId","key","opts","height","width","playerVars","autoplay","originals","action","App","array","setInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAaA,G,YAAU,oCACVC,EAAW,sC,OCsBTC,MAnBf,YAAyB,IAARC,EAAO,EAAPA,KACb,OACI,sBACAC,MAAQ,CAACC,gBAAgB,OAAD,OAAQJ,EAAWE,EAAKG,cAAxB,MACxBC,UAAU,SAFV,UAGI,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBJ,EAAKK,QAC5B,sBAAKD,UAAU,iBAAf,UACI,wBAAQA,UAAU,SAAlB,kBACA,wBAAQA,UAAU,SAAlB,wBAEJ,oBAAIA,UAAU,cAAd,SAA6BJ,EAAKM,cAGtC,qBAAKF,UAAU,a,MCNZG,MATf,WACI,OACI,sBAAKH,UAAU,SAAf,UACI,qBAAKA,UAAU,eAAeI,IAAI,mHAAmHC,IAAI,iBACzJ,qBAAKL,UAAU,cAAcI,IAAI,+EAA+EC,IAAI,oB,gBC0DjHC,MA5Df,YAAwC,IAAtBL,EAAqB,EAArBA,MAAMM,EAAe,EAAfA,KAAKC,EAAU,EAAVA,QAEzB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KA+BA,OA7BAC,qBAAU,WACNC,IAAMC,IAAIT,GAAMU,MAAK,SAACC,GAClBP,EAAUO,EAAIC,KAAKC,SACnBC,QAAQC,IAAIJ,EAAIC,KAAKC,cAE3B,IA4BE,sBAAKpB,UAAY,MAAjB,UACI,6BAAKC,IAEL,qBAAKD,UAAU,UAAf,SAGCU,EAAOa,KAAI,SAACC,GAAD,OAExB,qBAAKC,QAAS,kBAzBWC,EAyBKF,EAAIE,QAvB1BX,IAAMC,IAAN,6CAAgDU,EAAhD,2BAAqEjC,EAArE,oBAA+FwB,MAAK,SAACC,GACjGG,QAAQC,IAAIJ,EAAIC,KAAKC,QAAQ,IACX,IAAnBF,EAAIC,KAAKC,QACJP,EAAYK,EAAIC,KAAKC,QAAQ,IAE7BC,QAAQC,IAAI,YAPJ,IAACI,GAyBc1B,UAAWQ,EAAU,cAAgB,SAAUJ,IAAG,UAAKV,EAAU8B,EAAIzB,eAAiBM,IAAI,oBAOvHO,GAAY,cAAC,IAAD,CAASe,QAASf,EAASgB,IAAKC,KAzCrC,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UCtBPC,EAAS,2DAAwDzC,EAAxD,sBACT0C,EAAM,8DAAyD1C,EAAzD,mBCsCJ2C,MA9Bf,WAEEtB,qBAAU,WACRC,IAAMC,IAAN,iEAAoEvB,EAApE,oBAA8FwB,MAAK,SAACC,GAEpG,IAAMmB,EAAOnB,EAAIC,KAAKC,QAElBkB,EAAQD,EAAM,SAMlB,IAGF,MAAuB5B,mBAAS,IAAhC,mBAAOb,EAAP,KAAY0C,EAAZ,KAGA,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQJ,KAAOA,IACf,cAAC,EAAD,CAASW,KAAM2B,EAAWjC,MAAM,sBAC/B,cAAC,EAAD,CAASM,KAAM4B,EAAQlC,MAAM,SAASO,SAAO,QCtBrC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab10cf04.chunk.js","sourcesContent":["export const API_KEY = '6c16a478a1b9bab99efae7a83ec661e3';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';","import React from 'react'\r\nimport './Banner.css'\r\nimport {imageUrl} from '../../constants/constants'\r\n\r\nfunction Banner({info}) {\r\n    return (\r\n        <div\r\n        style={ {backgroundImage:`url(${imageUrl + info.backdrop_path})`}}\r\n        className=\"banner\">\r\n            <div className=\"content\">\r\n                <h1 className=\"title\">{info.title}</h1>\r\n                <div className=\"banner-buttons\">\r\n                    <button className=\"button\">Play</button>\r\n                    <button className=\"button\">My List</button>\r\n                </div>\r\n                <h1 className=\"description\">{info.overview}</h1>\r\n\r\n            </div>\r\n            <div className=\"fade\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"netflix-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix logo\" />\r\n            <img className=\"avatar-logo\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"avatar logo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Rowpost.css';\r\nimport axios from 'axios';\r\nimport {imageUrl,API_KEY} from '../../constants/constants'\r\nimport YouTube from 'react-youtube';\r\nfunction Rowpost({title,urls,isSmall}) {\r\n\r\n    const [movies,setMovies] =useState([]);\r\n\r\n    const [movieKey,setMovieKey] = useState('')\r\n\r\n    useEffect(()=>{\r\n        axios.get(urls).then((res)=>{\r\n            setMovies(res.data.results);\r\n            console.log(res.data.results);\r\n        })\r\n    },[])\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleMovie = (id)=>{\r\n       \r\n        axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((res)=>{\r\n            console.log(res.data.results[0]);\r\n        if(res.data.results!==0){\r\n                setMovieKey(res.data.results[0])\r\n            }else{\r\n                console.log('error');\r\n            }\r\n       \r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        \r\n\r\n        <div className = \"row\">\r\n            <h2>{title}</h2>\r\n             \r\n            <div className=\"posters\">\r\n\r\n                                          \r\n            {movies.map((obj)=>\r\n\r\n<img onClick={()=>handleMovie(obj.id)} className={isSmall ? \"smallPoster\" : \"poster\"} src={`${imageUrl +obj.backdrop_path}`} alt=\"poster-img\" />\r\n            )}\r\n           \r\n            \r\n            \r\n            </div> \r\n\r\n         {movieKey && <YouTube videoId={movieKey.key} opts={opts} /> }     \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rowpost\r\n","import {API_KEY} from './constants/constants';\r\nexport const originals =  `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213`;\r\nexport const action =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=28`","import axios from 'axios';\nimport React,{useEffect, useState} from 'react';\nimport './App.css';\nimport Banner from './components/Banner/Banner';\nimport Navbar from './components/Navbar/Navbar';\nimport Rowpost from './components/Rowpost/Rowpost';\nimport {originals,action} from './Urls';\n// import axios from 'axios';\nimport { API_KEY } from './constants/constants';\n\nfunction App() {\n \n  useEffect(()=>{\n    axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US`).then((res)=>{\n     \n    const array =res.data.results;\n   \n        setInfo(array[0])\n\n   \n       \n    })\n    \n  },[])\n  \n \n  const [info,setInfo] = useState([])\n \n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Banner info ={info} />\n      <Rowpost urls={originals} title=\"Netflix Originals\" />\n       <Rowpost urls={action} title=\"Action\" isSmall />\n    </div>\n  )\n  }\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}